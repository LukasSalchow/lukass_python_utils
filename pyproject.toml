[tool.poetry]
name = "lukass_python_utils"
version = "0.0.0"
description = "Some reusable python untils"
authors = [""]
readme = "README.md"

packages = [
  {include = "lukass_python_utils", from="src"},
]

[virtualenvs]
create = true
in-project = true

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
mypy = "^1.3.0"
ruff = "^0.7.1"
pytest = "^7.3.2"
hypothesis = "^6.78.2"
pre-commit = "^3.3.3"

[tool.pytest.ini_options]
minversion = "6.0.0rc1"
testpaths = [
  "tests",
]
pythonpath = [
  "src"
]
markers = [
    "integration: mark an integration test",
    "extras: mark a test that needs extra dependencies"
]

[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
follow_imports = "silent"

[tool.ruff]
src = ["src"]

extend-exclude = ["tests"]

lint.select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "S",    # flake8-bandit
    "N",    # pep8-naming
    "BLE",  # flake8-blind-except
    "A",    # flake8-builtins
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "SLF",  # flake8-self
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "PD",   # pandas-vet
    "PERF", # perflint
]
lint.ignore = []

lint.fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT"
]
lint.unfixable = []

line-length = 120

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# set python target version from cookiecutter
target-version = "py312"  # noqa

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
