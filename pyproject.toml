[tool.poetry]
name = "lukass_python_utils"
version = "0.0.0"
description = "Some reusable python utils."
authors = ["lukas.salchow <salchowlukas@gmail.com>"]
readme = "README.md"

packages = [
    { include = "lukass_python_utils", from = "src" },
]

[virtualenvs]
create = true
in-project = true

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
mypy = "^1.3.0"
ruff = "^0.7.2"
pytest = "^7.3.2"
hypothesis = "^6.78.2"
pre-commit = "^3.3.3"

[tool.pytest.ini_options]
minversion = "6.0.0rc1"
testpaths = [
    "tests",
]
pythonpath = [
    "src"
]
markers = [
    "unit: mark a unit test",
    "integration: mark an integration test",
    "extras: mark a test that needs extra dependencies"
]

[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
follow_imports = "silent"

[tool.ruff]
src = ["src"]
fix = true
extend-exclude = ["tests"]
line-length = 120

lint.select = ['ALL']
lint.ignore = [
    "G004", # logging-f-strin
    'D401', # non-imperative-mood
    'D203', # one-blank-line-before-class
    'D212', # multi-line-summary-first-line

    # not needed with formatter
    'COM812', # missing-trailing-comma
    'ISC001', # single-line-implicit-string-concatenation
    'Q000', #flake8-quotes.inline-quotes="double"
    'Q003',
]

lint.fixable = ['ALL']
lint.unfixable = []

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# set python target version from cookiecutter
target-version = '>=3.10'

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
